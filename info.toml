# INTRO

[[exercises]]
name = "intro1"
path = "exercises/intro/intro1.nr"
mode = "test"
hint = """
No hints this time ;)
"""

# MERKLE TREE

# [[exercises]]
# name = "merkle-tree"
# path = "exercises/merkle-tree/merkle.nr"
# mode = "test"
# hint = """
# No hints this time ;)
# """

# VARIABLES

[[exercises]]
name = "variables1"
path = "exercises/variables/variables1.nr"
mode = "compile"
hint = """
No hint this time
"""

[[exercises]]
name = "variables2"
path = "exercises/variables/variables2.nr"
mode = "compile"
hint = """
No hint this time
"""

[[exercises]]
name = "variables3"
path = "exercises/variables/variables3.nr"
mode = "compile"
hint = """
No hint this time
"""

[[exercises]]
name = "variables4"
path = "exercises/variables/variables4.nr"
mode = "compile"
hint = """
No hint this time
"""

[[exercises]]
name = "variables5"
path = "exercises/variables/variables5.nr"
mode = "compile"
hint = """
No hint this time
"""

[[exercises]]
name = "variables6"
path = "exercises/variables/variables6.nr"
mode = "compile"
hint = """
No hint this time
"""


# CONTROL FLOW

[[exercises]]
name = "if1"
path = "exercises/control-flow/if1.nr"
mode = "test"
hint = """
No hint this time
"""

[[exercises]]
name = "grade_calculator"
path = "exercises/control-flow/grade_calculator.nr"
mode = "test"
hint = """
No hint this time
"""


[[exercises]]
name = "count_factors"
path = "exercises/control-flow/count_factors.nr"
mode = "test"
hint = """
No hint this time
"""


# Arrays

[[exercises]]
name = "array_basics"
path = "exercises/arrays/array_basics.nr"
mode = "test"
hint = """
No hint this time
"""

[[exercises]]
name = "array_advance"
path = "exercises/arrays/array_advance.nr"
mode = "test"
hint = """
No hint this time
"""


# Structs

[[exercises]]
name = "structs1"
path = "exercises/structs/structs1.nr"
mode = "test"
hint = """
No hint this time
"""

[[exercises]]
name = "structs2"
path = "exercises/structs/structs2.nr"
mode = "test"
hint = """
No hint this time
"""

[[exercises]]
name = "structs3"
path = "exercises/structs/structs3.nr"
mode = "test"
hint = """
Define Person Struct like this
```
struct Person {
    name: str<10>,
    age: Field,
    home_address: Address,
}
```
First create a home_address like
```
let home_address = Address { street_number: street_num, zip_code: zip };
```
Finally create and resturn Person instance
```
Person { name, age, home_address }
```
"""

[[exercises]]
name = "shopping_cart"
path = "exercises/structs/shopping_cart.nr"
mode = "test"
hint = """
Define `new()` method inside implementation block
```
    fn new() -> Cart {
        let product = Product { id: 0, price: 0, quantity: 0 };
        Cart { items: [product; 3], total_items: 0 }
    }
```
Define `add_product` method inside implementation block
```
    fn add_product(&mut self, product: Product) -> bool {
        if self.total_items as u64 >= 3 {
            false
        } else {
            self.items[self.total_items as u64] = product;
            self.total_items = self.total_items + 1;
            true
        }
    }
```
"""
